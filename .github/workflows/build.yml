name: "Android Release Build and Deploy"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Setup the Android keystore, based on a repo secret. See the section 'Setup Android Keystore' below.
      - name: Setup Android Keystore
        id: android_keystore_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'my.keystore'
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Verify Keystore
        run: |
          echo "Keystore file: ${{ steps.android_keystore_file.outputs.filePath }}"
          echo "Keystore file exists: $(test -f ${{ steps.android_keystore_file.outputs.filePath }} && echo 'Yes' || echo 'No')"
          echo "Keystore file size: $(stat -c%s ${{ steps.android_keystore_file.outputs.filePath }} 2>/dev/null || echo 'N/A') bytes"

          # Check file type
          file ${{ steps.android_keystore_file.outputs.filePath }}

          # Try to list keystore without password first to see if it prompts
          keytool -list -keystore ${{ steps.android_keystore_file.outputs.filePath }} -storepass ${{ secrets.KEYSTORE_PASSWORD }} -v 2>&1 | head -10 || true

      - name: Build Release APK
        env:
          KEYSTORE_FILE: ${{ steps.android_keystore_file.outputs.filePath }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Build Release AAB
        env:
          KEYSTORE_FILE: ${{ steps.android_keystore_file.outputs.filePath }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew bundleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: androidApp/build/outputs/apk/release/*.apk

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: androidApp/build/outputs/bundle/release/*.aab

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            androidApp/build/outputs/apk/release/*.apk
            androidApp/build/outputs/bundle/release/*.aab
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download AAB
        uses: actions/download-artifact@v4
        with:
          name: release-aab
          path: androidApp/build/outputs/bundle/release/

      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: be.webtechie.emojisnakeapp.kotlin
          releaseFiles: androidApp/build/outputs/bundle/release/*.aab
          track: internal
          status: completed
          inAppUpdatePriority: 2
